#ifndef MESSAGE_PARSER_H
#define MESSAGE_PARSER_H

#include <functional>
#include <string>
#include <memory>
#include <unordered_map>

namespace MqttTopics
{
class TopicNode
{
    friend class MessageParser;

private:
    explicit TopicNode(const std::string& topic);
    TopicNode(const TopicNode&) = default;
    TopicNode& operator=(const TopicNode&) = default;
    ~TopicNode() = default;

private:
    const std::string topic;
    std::unique_ptr<std::function<void(void*)>> parse;
    std::unordered_map<std::string, std::unique_ptr<TopicNode>> adjacent;
};

class MessageParser
{
public:
    MessageParser() = default;
    MessageParser(const MessageParser&) = default;
    MessageParser& operator=(const MessageParser&) = default;
    ~MessageParser() = default;

private:
    std::unique_ptr<TopicNode> tree;
};
}

#endif