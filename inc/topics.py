from enum import Enum, auto

class Topic(Enum):
    vehicle_id = auto(),
    device_id = auto(),
    device_version = auto(),
    data = auto(),
    data_primary = auto(),
    data_secondary = auto(),
    data_bms = auto(),
    data_inverter = auto(),
    data_simulator = auto(),
    data_gps = auto(),
    data_brusa = auto(),
    data_temporary = auto(),
    data_camera_logger = auto(),
    data_camera_logger_can = auto(),
    data_camera_logger_can_imu_angular_rate = auto(),
    data_camera_logger_can_imu_acceleration = auto(),
    data_camera_logger_can_vehicle_position = auto(),
    data_camera_logger_can_vehicle_speed = auto(),
    data_camera_logger_can_front_angular_velocity = auto(),
    data_camera_logger_can_rear_left_angular_velocity = auto(),
    data_camera_logger_can_rear_right_angular_velocity = auto(),
    data_camera_logger_can_steer_angle = auto(),
    data_camera_logger_gps = auto(),
    data_camera_logger_gps_hpposllh = auto(),
    data_camera_logger_gps_pvt = auto(),
    data_camera_logger_gps_relposned = auto(),
    extra_data_to_log = auto(),
    extra_tlm_data = auto(),
    extra_tlm_data_vehicle_state = auto(),
    extra_tlm_data_baseline = auto(),
    extra_tlm_data_gps_map_origins = auto(),
    data_last_update = auto(),
    status = auto(),
    status_info = auto(),
    status_error = auto(),
    status_alert = auto(),
    status_can_frequencies = auto(),
    status_lap_counter_status = auto(),
    status_lap_counter_laps = auto(),
    command = auto(),
    command_steer = auto(),
    command_steer_status = auto(),
    file_transaction_request = auto(),
    file_transaction_response = auto(),
    file_transaction = auto(),
    file_transaction_begin = auto(),
    file_transaction_end = auto(),
    file_transaction_chunk = auto(),
    file_transaction_chunk_ack = auto(),
    info = auto(),
    info_version = auto(),
    info_user = auto(),
    info_telemetry_replay = auto(),
    info_telemetry_replay_ready = auto(),
    info_telemetry_replay_start = auto(),
    info_session = auto(),
    info_session_started = auto(),
    info_session_stopped = auto(),
    info_session_keepalive = auto(),
    action = auto(),
    action_telemetry_config = auto(),
    action_telemetry_config_set = auto(),
    action_telemetry_config_get = auto(),
    action_telemetry_config_content = auto(),
    action_session_config = auto(),
    action_session_config_set = auto(),
    action_session_config_get = auto(),
    action_session_config_content = auto(),
    action_car_config = auto(),
    action_car_config_set = auto(),
    action_car_config_get = auto(),
    action_car_config_content = auto(),
    action_baseline_config = auto(),
    action_baseline_config_set = auto(),
    action_baseline_config_get = auto(),
    action_baseline_config_content = auto(),
    action_handcart_settings = auto(),
    action_handcart_settings_set = auto(),
    action_handcart_settings_get = auto(),
    action_handcart_settings_content = auto(),
    raw_json_config = auto(),
    raw_json_config_set = auto(),
    raw_json_config_get = auto(),
    raw_json_config_content = auto(),
    action_lap_counter_config = auto(),
    action_lap_counter_config_set = auto(),
    action_lap_counter_config_get = auto(),
    action_lap_counter_config_content = auto(),
    action_lap_counter_track = auto(),
    action_lap_counter_track_set = auto(),
    action_lap_counter_track_get = auto(),
    action_lap_counter_track_content = auto(),
    action_kill = auto(),
    action_start = auto(),
    action_reset = auto(),
    action_stop = auto(),
    action_start_baseline = auto(),
    action_stop_baseline = auto(),
    action_precharge = auto(),
    action_balance = auto(),
    action_stop_balance = auto(),
    action_charge = auto(),
    action_stop_charge = auto(),
    action_raw = auto(),
    action_reset_lap_counter = auto(),
    action_set_lap_counter_status = auto()