#include "<alias>.h"

namespace MQTTTopics {
    const std::string <alias>::topic = "<topic>";
    const uint8_t <alias>::qos = <qos>;
    const std::unordered_set<uint8_t> <alias>::subscribeRoles = {<subscribeRoles>};
    const std::unordered_set<uint8_t> <alias>::publishRoles = {<publishRoles>};
    const bool <alias>::retained = <retained>;

    TopicString <alias>::get(<variables:params>) {
        std::string str(topic);

<variables:replaces>
        return str;
    }

    int <alias>::qualityOfService() {
        return static_cast<int>(qos);
    }

     bool <alias>::canSubscribe(unsigned int role) {
        return (subscribeRoles.find(role) != subscribeRoles.cend());
    }

    bool <alias>::canPublish(unsigned int role) {
        return (publishRoles.find(role) != publishRoles.cend());
    }

    bool <alias>::isRetained() {
        return retained;
    }
}// namespace MQTTTopics